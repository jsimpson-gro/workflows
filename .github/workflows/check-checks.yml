on:
  push:
    branches-ignore:
      - main

jobs:
  check_checks:
    name: Check for failing checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Call a Bash Script
        run: |
          # export

          echo "Requesting check suites for ${GITHUB_SHA}."
          response=$(curl -L -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/jsimpson-gro/workflows/commits/${GITHUB_SHA}/check-suites)

          suite_ids=$(echo "${response}" | jq -r '.check_suites[].id' | tr '\n' ' ')

          i=0
          while true ; do
              i=$(( i + 1 ))
              sleep 1

              if [[ $i -gt 10 ]]; then
                  echo "ERROR: Timed out waiting for the check suite to complete."
                  return 1
              fi

              other_checks=""
              for suite_id in $(echo ${suite_ids}); do
                  echo "Requesting check run for check suite ${suite_id} information from Github."

                  response=$(curl -L -s \
                    -H "Accept: application/vnd.github+json" \
                    -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    https://api.github.com/repos/jsimpson-gro/workflows/check-suites/${suite_id}/check-runs)

                  response=$(echo "$response" | jq '.check_runs')
                  other_checks=$(echo "$other_checks $response" | jq -s 'map(.[])')
              done
              other_checks=$(echo $other_checks \
                  | jq '. | map(select(.name != "Check for failing checks"))')

              count_other_checks=$(echo $other_checks | jq 'length')
              if [[ $count_other_checks -eq 0 ]]; then
                  echo "No other checks are gating this PR."
                  exit 0
              fi

              count_incomplete_checks=$(echo $other_checks | jq 'map(select(.status != "completed")) | length')
              if [[ $count_incomplete_checks -ne 0 ]]; then
                  continue
              fi

              echo "All check runs have completed in this suite."
              count_unsuccessful_checks=$(echo $other_checks | jq 'map(select(.conclusion != "success")) | length')
              exit $count_unsuccessful_checks
          done
